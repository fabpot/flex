name: "CI"

on:
    pull_request:
    push:
        branches:
            - '1.x'
            - '2.x'

env:
    SYMFONY_PHPUNIT_DIR: "$HOME/symfony-bridge/.phpunit"

jobs:
    tests:
        name: "PHP ${{ matrix.php }} ${{ matrix.mode }}"

        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                include:
                  - php: '7.1'
                    composer: 2.2.x
                  - php: '7.2'
                  - php: '7.3'
                  - php: '7.4'
                  - php: '8.0'
                  - php: '8.1'
                  - php: '8.2'
                  - php: '8.3'
                  - php: '8.4'
                  - php: '7.4'
                    mode: low-deps

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v4

            - name: "Install PHP with extensions"
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  php-version: ${{ matrix.php }}
                  tools: composer:${{ matrix.composer }}

            - name: "Validate composer.json"
              run: "composer validate --strict --no-check-lock"

            - run: |
                composer require --no-update composer/composer:^1.0.2 --ansi

                if [[ "${{ matrix.mode }}" = low-deps ]]; then
                    composer u --prefer-lowest --prefer-stable --ansi
                else
                    composer u --ansi
                fi

            - name: "Install PHPUnit"
              run: vendor/bin/simple-phpunit install

            - run: vendor/bin/simple-phpunit

            - run: |
                composer require --no-update composer/composer:^2 --ansi

                if [[ "${{ matrix.mode }}" = low-deps ]]; then
                    composer u --prefer-lowest --prefer-stable --ansi
                else
                    composer u --ansi
                fi

            - run: vendor/bin/simple-phpunit

            - if: matrix.php == '7.1'
              name: "Lint PHP files"
              run: find src/ -name '*.php' | xargs -n1 php -l
